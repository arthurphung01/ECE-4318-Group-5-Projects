import os.path
import time
from google.auth.transport.requests import Request
from google.oauth2.credentials import Credentials
from google_auth_oauthlib.flow import InstalledAppFlow
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError
import email
import base64

# If modifying these scopes, delete the file token.json.
SCOPES = ['https://www.googleapis.com/auth/gmail.readonly']

global msg

def main():
    
    creds = None
    # The file token.json stores the user's access and refresh tokens, and is
    # created automatically when the authorization flow completes for the first
    # time.
    if os.path.exists('token.json'):
        creds = Credentials.from_authorized_user_file('token.json', SCOPES)
    # If there are no (valid) credentials available, let the user log in.
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            creds.refresh(Request())
        else:
            flow = InstalledAppFlow.from_client_secrets_file(
                'credentials.json', SCOPES)
            creds = flow.run_local_server(port=0)
        # Save the credentials for the next run
        with open('token.json', 'w') as token:
            token.write(creds.to_json())

    try:
        # Call the Gmail API
        service = build('gmail', 'v1', credentials=creds)
        #results = service.users().labels().list(userId='me').execute()
        #labels = results.get('labels', [])

        results = service.users().messages().list(userId='me', labelIds=['INBOX'], q="is:read").execute()
        messages = results.get('messages', [])
        if not messages:
            print("You have no messages")
        else:    
            msg_count = 0
            for message in messages:
                msg = service.users().messages().get(userId='me', id=message['id']).execute()
                msg_count = msg_count + 1
            print("You have " + str(msg_count) + " messages.")
            #print('Read: ', messages)

            for message in messages:
                msg = service.users().messages().get(userId='me', id=message['id']).execute()
                email_data = msg['payload']['headers']
                for values in email_data:
                    sender = values["name"]
                    if sender == "Subject":
                        subject = values["value"]
                        print("Subject: " + subject)
                    if sender == "From":
                        from_sender = values["value"]
                        print("You have a message from: " + from_sender)
                        print("  " + msg['snippet'][:600] + " \n")
                        print("------------------------------\n")
                        time.sleep(2)
        msg_count = 0
    except HttpError as error:
        # TODO(developer) - Handle errors from gmail API.
        print(f'An error occurred: {error}')


if __name__ == '__main__':
    main()
